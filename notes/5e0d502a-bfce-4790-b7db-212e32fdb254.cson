createdAt: "2019-12-20T08:14:26.669Z"
updatedAt: "2019-12-20T08:55:25.528Z"
type: "MARKDOWN_NOTE"
folder: "cdf3da13e79e819c8162"
title: "链表温习"
tags: []
content: '''
  # 链表温习
  ## 链表种类
    - 带头单链表，不带头单链表
    - 带头双向链表，不带头双向链表
    - 循环单链表
    - 带头循环双向链表
  主要用就两种：无头单向非循环链表；带头双向循环链表；
  ![新建位图图像 (5).bmp](:storage\\5e0d502a-bfce-4790-b7db-212e32fdb254\\6597e844.bmp)
  
  ## 链表和数组的区别：
  - 两者的区别：
  
  1. 数组静态分配内存，链表动态分配内存。
  2. 数组在内存中是连续的，链表是不连续的。
  3. 数组利用下标定位，查找的时间复杂度是O(1)，链表通过遍历定位元素，查找的时间复杂度是O(N)。
  4. 数组插入和删除需要移动其他元素，时间复杂度是O(N)，链表的插入或删除不需要移动其他元素，时间复杂度是O(1)。
  
  - 数组的优点
  
  1. 随机访问性比较强，可以通过下标进行快速定位。
  2. 查找速度快
  
  - 数组的缺点
  
  1. 插入和删除的效率低，需要移动其他元素。
  2. 会造成内存的浪费，因为内存是连续的，所以在申请数组的时候就必须规定七内存的大小，如果不合适，就会造成内存的浪费。
  3. 内存空间要求高，创建一个数组，必须要有足够的连续内存空间。
  4. 数组的大小是固定的，在创建数组的时候就已经规定好，不能动态拓展。
  
  - 链表的优点
  
  1. 插入和删除的效率高，只需要改变指针的指向就可以进行插入和删除。
  2. 内存利用率高，不会浪费内存，可以使用内存中细小的不连续的空间，只有在需要的时候才去创建空间。大小不固定，拓展很灵活。
  
  - 链表的缺点
  1. 查找的效率低，因为链表是从第一个节点向后遍历查找。
  ## 链表的操作【linux源码】
  
  
'''
linesHighlighted: []
isStarred: false
isTrashed: false
